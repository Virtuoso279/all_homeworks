"use strict"
//'number' + 3 ->  числове значення 3 неявно перетворюється в рядок, і вони конкатенуються
console.log('number' + 3 + 3);  //number33
//null неявно перетворюється в число 0, і вони додаються
console.log(null + 3);  //3
//oбидва операнди істинні, але оператор && повертає значення останнього істинного операнду
console.log(5 && "qwerty");  //qwerty
//Спочатку два рядки '40' і '2' конвертуються в числа (бо перед ними стоїть +), які додаються разом, 
//потім до них додається рядок "hillel"
console.log(+'40' + +'2' + "hillel");  //42hillel
//Рядок '10' конвертується в число 10 (бо '-' в JS працює лише з числами, тому спробує конвертувати рядок в число),
//потім від нього віднімається 5 і порівнюється з числом 6
console.log('10' - 5 === 6);  //false
//Логічні значення true і false конвертуються в числа 1 і 0, які додаються разом  
console.log(true + false);  //1
//Рядок '4px' не може бути конвертований в число, тому результатом буде NaN (Not a Number)
console.log('4px' - 3);  //Nan
//Рядок '4' конвертується в число 4, з якого віднімається число 3
console.log('4' - 3);  //1
//3 в степені 0 дорівнює 1, потім ця 1 конвертується в рядок і відбудеться конкатенація з рядком '6'
console.log('6' + 3 ** 0);  //61
//Рядок '6' конвертується в число 6, і число 12 ділиться на нього
console.log(12 / '6');  //2
//Вираз (5 === 6) дає false, що конвертується в рядок false, після чого рядок '10' і результат конкатенуються
console.log('10' + (5 === 6));  //10false
//Результатом порівняння буде false, оскільки null може бути порівняний лише з undefined
console.log(null == '');  //false
//Спочатку виконується операція 9 / 3, що дає 3, після чого число 3 підноситься до степені 3
console.log(3 ** (9 / 3));  //27
//будь-який непорожній рядок, окрім рядка '0', буде перетворений в true при застосуванні оператора !!, true == true
console.log(!!'false' == !!'true');  //true
//Обидва операнди '0' && 1 є true, тому вираз повертає значення 1, далі оператор || повертає істинне значення
console.log(0 || '0' && 1);  //1
//Спочатку null конвертується в число 0, яке дорівнює false. Порівняння false з false дає true, що конвертується в 1
console.log((+null == false) < 1);  //false
//Вираз false && true дає false, але оператор || поверне true, оскільки другий операнд true.
console.log(false && true || true);  //true
// Спочатку виконується внутрішнє порівняння false || true, що дає true, після чого false && true дає false
console.log(false && (false || true));  //false
//Спочатку null конвертується в число 0, яке дорівнює false. Порівняння false з false дає true, що конвертується в 1
//1 в 5 степені = 1, далі порівяння 1 < 1
console.log((+null == false) < 1 ** 5);  //false
